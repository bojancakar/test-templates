name: Image tagging

on:
  workflow_call:
    secrets:
      token:
        required: true
        
jobs:

  new_version:
    if: github.event.pull_request.merged == true && !contains(github.event.pull_request.labels.*.name, 'no_release')
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.token}}

    - uses: actions/setup-node@v3
      with:
       node-version: 16
       
    - name: Looking for minor changes 
      if:  ${{contains(github.event.pull_request.labels.*.name, 'version:minor')}}
      run: echo "NEW_VERSION=$(npm version minor --no-git-tag-version --tag-version-prefix="")" >> $GITHUB_ENV

    - name: Looking for major changes
      if:  ${{contains(github.event.pull_request.labels.*.name, 'version:major')}}
      run: echo "NEW_VERSION=$(npm version major --no-git-tag-version --tag-version-prefix="")" >> $GITHUB_ENV

    - name: Looking for patch changes
      if: ${{contains(github.event.pull_request.labels.*.name, 'version:patch')}}
      run: echo "NEW_VERSION=$(npm version patch --no-git-tag-version --tag-version-prefix="")" >> $GITHUB_ENV

    - name: Set outputs
      id: output
      run: echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Push tag
      run: |
        git config --global user.email "new_version@fornul.io"
        git config --global user.name "Github Action"
        git tag -a -m "new release" $NEW_VERSION
        git add .
        git commit -m "new version"
        git push origin main -f --tags
    outputs:
      new_version: ${{ steps.output.outputs.new_version}}

  # test:
  #   needs: new_verison
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: testing
  #       env:
  #         MARGED: ${{ github.event.pull_request.merged }}
  #       run: |
  #         echo $MERGED

  # echo-job:
  #   needs: new_version
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: echo
  #       id: echo-job
  #       run: echo ${{ needs.new_version.outputs.new_version}} #needs.job_name.outputs.output_name
    